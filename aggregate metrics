DELETE FROM array_metrics;

CREATE TABLE array_metrics(
	user_id NUMERIC,
	month_start DATE,
	metric_name TEXT,
	metric_array REAL[],
	PRIMARY KEY(user_id,month_start,metric_name)
)
WITH daily_aggregate AS (
    SELECT 
        user_id,
        COUNT(1) AS num_site_hits,
        DATE(event_time) AS date
    FROM events 
    WHERE DATE(event_time) = DATE('2023-01-04')
      AND user_id IS NOT NULL
    GROUP BY user_id, DATE(event_time)
),
yesterday_array AS (
    SELECT *
    FROM array_metrics
    WHERE month_start = DATE('2023-01-03')
)
INSERT INTO array_metrics (user_id, month_start, metric_name, metric_array)
SELECT 
    COALESCE(da.user_id, ya.user_id) AS user_id, 
    COALESCE(ya.month_start, DATE_TRUNC('month', da.date)) AS month_start, 
    'site_hits' AS metric_name, 
    CASE 
        WHEN ya.metric_array IS NOT NULL THEN 
            -- Append today's count to existing metric_array
            ya.metric_array || COALESCE(da.num_site_hits, 0)
        ELSE 
            -- Create zero array for previous days + today's count
            ARRAY_FILL(0, ARRAY[
                EXTRACT(day FROM da.date) :: int - 1
            ]) || ARRAY[COALESCE(da.num_site_hits, 0)]
    END AS metric_array
FROM daily_aggregate da
FULL OUTER JOIN yesterday_array ya 
    ON da.user_id = ya.user_id
ON CONFLICT (user_id, month_start, metric_name)
DO UPDATE 
--excluded means the row needs to be excluded because there is conflict
/*however with the set statement, we are forcing the table to update the existing
row with the new row */
SET metric_array = EXCLUDED.metric_array;
